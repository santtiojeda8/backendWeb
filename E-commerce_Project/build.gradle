plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(20)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-envers
	implementation("org.hibernate.orm:hibernate-envers:6.6.13.Final") // Verifica si esta versión es compatible con Spring Boot 3.4.4
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // O la última versión estable
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // Usar runtimeOnly porque es la implementación
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Usar runtieOnly para la serialización/deserialización JSON (Jackson)

	// --- DEPENDENCIA DE MERCADO PAGO ---
	implementation 'com.mercadopago:sdk-java:2.4.0' // ¡Esta es la versión correcta!

	// --- DEPENDENCIA DE CLOUDINARY ---
	implementation 'com.cloudinary:cloudinary-http44:1.38.0'

}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
	reports {
		html.outputLocation = file("${buildDir}/reports/tests/test")
	}

}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}